name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  REGION: ${{ vars.GCP_REGION }}
  SERVICE_NAME: ${{ vars.CLOUD_RUN_SERVICE }}
  REPOSITORY: cloud-run
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Verify deployment environment variables
        shell: bash
        run: |
          missing=0
          for var in PROJECT_ID REGION SERVICE_NAME; do
            if [[ -z "${!var}" ]]; then
              echo "::error::Environment variable $var is required but not set. Check repository secrets."
              missing=1
            fi
          done
          if [[ "${missing}" -ne 0 ]]; then
            exit 1
          fi

      - name: Configure Artifact Registry authentication
        run: gcloud auth configure-docker "${{ env.REGION }}-docker.pkg.dev" --quiet

      - name: Build and push container image
        run: |
          if [[ -z "${{ env.IMAGE_NAME }}" ]]; then
            echo "::error::IMAGE_NAME environment variable is required."
            exit 1
          fi
          echo "Using Artifact Registry image name: ${{ env.IMAGE_NAME }}"
          IMAGE_URI="${{ env.REGION }}-docker.pkg.dev/${GCP_PROJECT_ID:-${{ env.PROJECT_ID }}}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${GITHUB_SHA}"
          echo "Full IMAGE_URI: ${IMAGE_URI}"
          echo "IMAGE_URI=${IMAGE_URI}" >> $GITHUB_ENV
          gcloud builds submit --tag "${IMAGE_URI}" .

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "${{ env.SERVICE_NAME }}" \
            --image "${IMAGE_URI}" \
            --region "${{ env.REGION }}" \
            --platform managed \
            --allow-unauthenticated
